version: '3.8'

services:
  # Redis service for state management and circuit breakers
  redis:
    image: redis:7-alpine
    container_name: dem-backend-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s

  # DEM Backend FastAPI service
  dem-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dem-backend-api
    ports:
      - "8001:8001"
    environment:
      - APP_ENV=development
      - REDIS_URL=redis://redis:6379
      - USE_S3_SOURCES=true
      - USE_API_SOURCES=true
      - SPATIAL_INDEX_SOURCE=local
      - LOG_LEVEL=INFO
      - PYTHONPATH=/app
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./.env.development:/app/.env:ro
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis Commander for Redis management UI
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: dem-backend-redis-ui
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - dev-tools

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: dem-backend-network 